<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="personLabel" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="7"/>
    </Style>

    <!-- Person DataTemplate -->
    <DataTemplate x:Key="orderLineDataTemplate">

        <Border BorderBrush="#FFFF3204" x:Name="bord" BorderThickness="2" CornerRadius="10">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF4E4E4E"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <StackPanel Margin="0">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Label Content="{Binding Quantity}" 
						    FontSize="9" Foreground="Orange"
                            HorizontalAlignment="Right"
                            HorizontalContentAlignment="Right"
						    Style="{StaticResource personLabel}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="FirstName" Style="{StaticResource personLabel}"/>
                        <Label Content="{Binding Product}" Style="{StaticResource personLabel}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="LastName" Style="{StaticResource personLabel}"/>
                        <Label Content="{Binding Comment}" Style="{StaticResource personLabel}"/>
                    </StackPanel>
                </StackPanel>
                <Ellipse Width="30" Height="30" Fill="Black" 
                            HorizontalAlignment="Left" Margin="-10,-10,0,0" 
                            VerticalAlignment="Top" 
                            Stroke="#FFFF3204" StrokeThickness="4"/>
                <Image x:Name="img" Margin="-5,-5,0,0" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Top"
                    Source="{Binding Image}" 
                    Width="20" Height="20" 
                    ToolTip="{Binding Comment}" />
            </Grid>
        </Border>


        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMale}" Value="False">
                <Setter TargetName="img" Property="Source" Value="../Images/female.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                    AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter TargetName="bord" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="15" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <!-- Robot DataTemplate -->
    <!--
    <DataTemplate x:Key="robotDataTemplate">
        <StackPanel Orientation="Vertical">
            <Image x:Name="img"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    Source="{Binding ImageUrl}" 
                    Width="50" Height="50" 
                    ToolTip="{Binding RobotName}" />
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                    AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter TargetName="img" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="15" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    -->
    <!-- Person DataTemplate -->
    <!--
    <DataTemplate x:Key="personDataTemplate">

        <Border BorderBrush="#FFFF3204" x:Name="bord" BorderThickness="2" CornerRadius="10">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF4E4E4E"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <StackPanel Margin="0">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Label Content="{Binding Salutation}" 
						    FontSize="9" Foreground="Orange"
                            HorizontalAlignment="Right"
                            HorizontalContentAlignment="Right"
						    Style="{StaticResource personLabel}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="FirstName" Style="{StaticResource personLabel}"/>
                        <Label Content="{Binding FirstName}" Style="{StaticResource personLabel}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="LastName" Style="{StaticResource personLabel}"/>
                        <Label Content="{Binding LastName}" Style="{StaticResource personLabel}"/>
                    </StackPanel>
                </StackPanel>
                <Ellipse Width="30" Height="30" Fill="Black" 
                            HorizontalAlignment="Left" Margin="-10,-10,0,0" 
                            VerticalAlignment="Top" 
                            Stroke="#FFFF3204" StrokeThickness="4"/>
                <Image x:Name="img" Margin="-5,-5,0,0" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Top"
                    Source="../Images/male.png" 
                    Width="20" Height="20" 
                    ToolTip="{Binding RobotName}" />
            </Grid>
        </Border>


        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMale}" Value="False">
                <Setter TargetName="img" Property="Source" Value="../Images/female.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                    AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter TargetName="bord" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="15" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>            
        </DataTemplate.Triggers>
    </DataTemplate>
    -->


    <!-- Black Previous Button style-->
    <Style x:Key="BlackPreviousButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox  Width="60"
                                Height="60">
                        <Image x:Name="img" Source="../Images/BlackArrowPrevious.png"
                                Margin="{TemplateBinding Padding}" Opacity="0.5"
                                Stretch="Uniform">
                        </Image>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                    Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="15" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="img"
                                    Property="Opacity"
                                    Value="1.0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                    Value="False">
                            <Setter TargetName="img"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Black Next Button style-->
    <Style x:Key="BlackNextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox  Width="60"
                              Height="60">
                        <Image x:Name="img" Source="../Images/BlackArrowNext.png"
                               Margin="{TemplateBinding Padding}" Opacity="0.5"
                               Stretch="Uniform">
                        </Image>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="15" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="img"
                                    Property="Opacity"
                                    Value="1.0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="img"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

     <!-- GlassBtton-->
    <ControlTemplate x:Key="GlassButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Timeline1">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Timeline2">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
            <Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.507*"/>
                        <RowDefinition Height="0.493*"/>
                    </Grid.RowDefinitions>
                    <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="-0.368" Y="-0.152"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#B28DBDFF" Offset="0"/>
                                <GradientStop Color="#008DBDFF" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"
                                      Content="{TemplateBinding Content}" TextElement.Foreground="White"/>
                    <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                <GradientStop Color="#99FFFFFF" Offset="0"/>
                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ScrollBarPageButton -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource transparentBackGround}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VerticalScrolScrollBarThumblBar -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
          CornerRadius="4" 
          Background="Black"
          BorderBrush="Black"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- VerticalScrollBar -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Background="{DynamicResource transparentBackGround}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="1"
      CornerRadius="2" 
      Background="{DynamicResource transparentBackGround}" />
            <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Name="thumb"
          Style="{StaticResource ScrollBarThumb}" 
          Margin="3,0,3,0"  
          Background="Black"
          BorderBrush="Black" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>

            </Track>
        </Grid>

    </ControlTemplate>

    <!-- HorizontalScrollBar -->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Background="{DynamicResource transparentBackGround}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="1"
      CornerRadius="2" 
      Background="{DynamicResource transparentBackGround}" />
            <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Name="thumb"
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,3,0,3"  
          Background="Black"
          BorderBrush="Black" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="14" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="14"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewerStyle -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ContextMenu" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
   <!-- Application ToolTip Styles -->
    <Style TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                          CornerRadius="2"
                          BorderBrush="DarkGray"
                          Background="LightGray"
                          BorderThickness="2"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}">

                        <Label Foreground="Black" FontFamily="Tahoma"
                            FontWeight="Bold" FontSize="10"
                            Margin="2" Content="{TemplateBinding Content}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" 
                                    Property="CornerRadius" 
                                    Value="4"/>
                            <Setter TargetName="Border" 
                                    Property="SnapsToDevicePixels" 
                                    Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <Style x:Key="ComboBoxExTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition SharedSizeGroup="ComboBoxButton" Width="Auto" 
                                              MinWidth="20"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="1" Content="q"  FontFamily="Wingdings 3" 
                               Foreground="Black" FontSize="12" Padding="0" 
                               VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-3,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <Style x:Key="RegularComboBox" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" 
                Value="{Binding Path=HorizontalContentAlignment, 
                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                Value="{Binding Path=VerticalContentAlignment, 
                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border 
                          Name="Border"
                          Padding="0"
                          SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="cont" Margin="0"
                                Height="30" HorizontalAlignment="Left" 
                                VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="cont" Property="TextElement.Foreground" 
                                    Value="Red"/>
                            <Setter TargetName="cont" Property="TextElement.FontWeight" 
                                    Value="Bold"/>
                            <Setter TargetName="cont" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="DarkBlue" BlurRadius="10" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <Style x:Key="comboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>        
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource RegularComboBox}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd"
                                SnapsToDevicePixels="true" 
                                Height="{TemplateBinding Height}" 
                                Width="{TemplateBinding Width}"
                                VerticalAlignment="Center"
				                Background="LightGray" 
				                CornerRadius="5"
				                BorderBrush="DarkGray" 
				                BorderThickness="1">
                            <Grid Grid.IsSharedSizeScope="true" Background="LightGray" Margin="5,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Label x:Name="item" Background="Transparent" 
                                       SnapsToDevicePixels="True" 
                                       HorizontalAlignment="Left" 
                                       FontWeight="{TemplateBinding FontWeight}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="-2,-9,-2,-2" VerticalAlignment="Center" 
                                       Grid.Column="0" Content="{TemplateBinding SelectionBoxItem}" 
                                       ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                       ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <ToggleButton Style="{StaticResource ComboBoxExTransparentButtonStyle}" 
                                        Grid.Column="0" Grid.ColumnSpan="2"
                                       IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" Focusable="false" AllowsTransparency="true" 
                               IsOpen="{Binding Path=IsDropDownOpen, 
                               RelativeSource={RelativeSource TemplatedParent}}" 
                               Placement="Bottom" 
                               PopupAnimation="{DynamicResource 
                                {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" >
                                <Border  x:Name="Shdw"
                                    MaxHeight="100" 
                                    MinWidth="{TemplateBinding ActualWidth}" 
                                    Background="Transparent">
                                    <Border x:Name="DropDownBorder" CornerRadius="5"
                                            Background="LightGray" 
                                            BorderBrush="Black" BorderThickness="2">
                                        <ScrollViewer Background="LightGray">
                                            <ItemsPresenter 
                                                TextElement.FontSize="{TemplateBinding FontSize}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted" Value="true"/>
                                <Condition Property="IsDropDownOpen" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="Black"/>
                        </MultiTrigger>

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
</ResourceDictionary>